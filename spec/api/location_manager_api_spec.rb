=begin
#Yext API

# 

OpenAPI spec version: 0.0.2

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for YextClient::LocationManagerApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'LocationManagerApi' do
  before do
    # run before each test
    @instance = YextClient::LocationManagerApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of LocationManagerApi' do
    it 'should create an instact of LocationManagerApi' do
      expect(@instance).to be_instance_of(YextClient::LocationManagerApi)
    end
  end

  # unit tests for create_bio
  # Bios: Create
  # Create new Bio ECL
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse201]
  describe 'create_bio test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_event
  # Events: Create
  # Create a new Events ECL
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2012]
  describe 'create_event test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_location
  # Locations: Create
  # Create a new Location
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param location_request 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2011]
  describe 'create_location test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_menu
  # Menus: Create
  # 
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2013]
  describe 'create_menu test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_product
  # Products: Create
  # Create a new Product ECL
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20011]
  describe 'create_product test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_bio_list
  # Bios: Delete
  # Delete an existing Bios ECL
  # @param account_id 
  # @param list_id ID of this List
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param [Hash] opts the optional parameters
  # @return [InlineResponseDefault]
  describe 'delete_bio_list test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_event_list
  # Events: Delete
  # Delete an existing Events ECL
  # @param account_id 
  # @param list_id ID of this List
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param [Hash] opts the optional parameters
  # @return [InlineResponseDefault]
  describe 'delete_event_list test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_language_profile
  # Language Profiles: Delete
  # Remove a Language Profile from a location
  # @param account_id 
  # @param location_id 
  # @param language_code Locale code
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param [Hash] opts the optional parameters
  # @return [InlineResponseDefault]
  describe 'delete_language_profile test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_menu_list
  # Menus: Delete
  # Delete an existing Menu
  # @param account_id 
  # @param list_id ID of this List
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param [Hash] opts the optional parameters
  # @return [InlineResponseDefault]
  describe 'delete_menu_list test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_product_list
  # Products: Delete
  # Delete an existing Products ECL
  # @param account_id 
  # @param list_id ID of this List
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param [Hash] opts the optional parameters
  # @return [InlineResponseDefault]
  describe 'delete_product_list test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_bio
  # Bios: Get
  # Retrieve a specific Bios ECL
  # @param account_id 
  # @param list_id ID of this List
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse201]
  describe 'get_bio test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_bios
  # Bios: List
  # Retrieve all Bio ECls for an account
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Number of results to return
  # @option opts [Integer] :offset Number of results to skip. Used to page through results
  # @return [InlineResponse2004]
  describe 'get_bios test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_business_categories
  # Categories: List
  # Get available Categories.  All Locations are required to have an associated Category to assist with organization and search. Yext provides a hierarchy of business categories for this purpose, exposed by this API. 
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param [Hash] opts the optional parameters
  # @option opts [String] :language Only categories that apply to this language will be returned.  **Example:** en 
  # @option opts [String] :country Only categories that apply in this country will be returned.  **Example:** US 
  # @return [InlineResponse20030]
  describe 'get_business_categories test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_custom_fields
  # Custom Fields: List
  # Returns a list of Custom Fields in an Account.
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param account_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :offset Number of results to skip. Used to page through results
  # @option opts [Integer] :limit Number of results to return
  # @return [InlineResponse2005]
  describe 'get_custom_fields test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_event
  # Events: Get
  # Retrieve a specific Events ECL
  # @param account_id 
  # @param list_id ID of this List
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2012]
  describe 'get_event test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_events
  # Events: List
  # Retrieve all Events content lists for an account
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Number of results to return
  # @option opts [Integer] :offset Number of results to skip. Used to page through results
  # @return [InlineResponse20010]
  describe 'get_events test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_google_keywords
  # Google Fields: List
  # Use the Google Attributes API to retrieve a complete list of Google&#39;s location attributes for each business category. This list includes attributes that may not apply to all Partner Locations in an account. The attributes available to a Partner Location depends on its primary business category. You can view and edit the attributes of Partner Locationsvia the googleKeywords field in the Locations API.
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20031]
  describe 'get_google_keywords test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_language_profile
  # Language Profiles: Get
  # Gets the the requested Language Profile for a given Location
  # @param account_id 
  # @param location_id 
  # @param language_code Locale code
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20012]
  describe 'get_language_profile test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_language_profiles
  # Language Profiles: List
  # Get Language Profiles for a Location.
  # @param account_id 
  # @param location_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20013]
  describe 'get_language_profiles test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_location
  # Locations: Get
  # Gets the primary profile for a single Location.
  # @param account_id 
  # @param location_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20012]
  describe 'get_location test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_location_folders
  # Folders: List
  # Returns a list of Location Folders in an Account.
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :offset Number of results to skip. Used to page through results
  # @option opts [Integer] :limit Number of results to return
  # @return [InlineResponse2006]
  describe 'get_location_folders test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_locations
  # Locations: List
  # Get multiple Locations (primary profiles only).
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Number of results to return
  # @option opts [Integer] :offset Number of results to skip. Used to page through results
  # @return [InlineResponse2009]
  describe 'get_locations test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_menu
  # Menus: Get
  # Retrieve a specific Menu
  # @param account_id 
  # @param list_id ID of this List
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2013]
  describe 'get_menu test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_menus
  # Menus: List
  # Retrieve all Menu ECLs for an account
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Number of results to return
  # @option opts [Integer] :offset Number of results to skip. Used to page through results
  # @return [InlineResponse20014]
  describe 'get_menus test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_product
  # Products: Get
  # Retrieve a specific Products ECL
  # @param account_id 
  # @param list_id ID of this List
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20011]
  describe 'get_product test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_products
  # Products: List
  # Retrieve all Products content lists for an account
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Number of results to return
  # @option opts [Integer] :offset Number of results to skip. Used to page through results
  # @return [InlineResponse20025]
  describe 'get_products test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_bio
  # Bios: Update
  # Update an existing Bios ECL
  # @param account_id 
  # @param list_id ID of this List
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse201]
  describe 'update_bio test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_event
  # Events: Update
  # Update an existing Events ECL
  # @param account_id 
  # @param list_id ID of this List
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2012]
  describe 'update_event test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_location
  # Locations: Update
  # Updates the primary profile for a Location.  **NOTE:** Despite using the PUT method, Locations: Update only updates supplied fields. Omitted fields are not modified.  **NOTE:** The Location&#39;s primary profile language can be changed by calling this endpoint with a different, but unused, language code. 
  # @param account_id 
  # @param location_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param location_request 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2011]
  describe 'update_location test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_menu
  # Menus: Update
  # Update an existing Menu
  # @param account_id 
  # @param list_id ID of this List
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2013]
  describe 'update_menu test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_product
  # Products: Update
  # Update an existing Product ECL
  # @param account_id 
  # @param list_id ID of this List
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20011]
  describe 'update_product test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for upsert_language_profile
  # Language Profiles: Upsert
  # Creates and / or sets the fields for a Language Profile  **NOTE:** You can change a Language Profile’s language by supplying a different (but unused) language code. 
  # @param account_id 
  # @param location_id 
  # @param language_code Locale code
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param body 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :primary When present and set to true, the specified profile will become the location’s primary Language Profile
  # @return [InlineResponse20012]
  describe 'upsert_language_profile test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
