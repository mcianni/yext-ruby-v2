=begin
#Yext API

# 

OpenAPI spec version: 0.0.2

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for YextClient::UserApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'UserApi' do
  before do
    # run before each test
    @instance = YextClient::UserApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UserApi' do
    it 'should create an instact of UserApi' do
      expect(@instance).to be_instance_of(YextClient::UserApi)
    end
  end

  # unit tests for create_user
  # Users: Create
  # Create a new User
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param user_request 
  # @param [Hash] opts the optional parameters
  # @return [IdResponse]
  describe 'create_user test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_user
  # Users: Delete
  # Deletes an existing User.
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param user_id 
  # @param user_request 
  # @param [Hash] opts the optional parameters
  # @return [UserResponse]
  describe 'delete_user test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_link_optimization_task
  # Optimization Tasks: Get Link
  # Retrieve a link to perform any pending Optimization Tasks given a set of Optimization Tasks and Locations.
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param task_ids Comma-separated list of Optimization Task IDs corresponding to Optimization Tasks that should be included in the response.  Defaults to all available Optimization Tasks in the account. 
  # @param location_ids Comma-separated list of Location IDs, corresponding to Locations to be evaluated when returning the number of locations eligible &amp; completed for each Optimization Task.  Defaults to all Locations in the account. 
  # @param mode When mode is PENDING_ONLY, the resulting link will only ask the user to complete tasks that are pending or in progress (that have not been completed before).  When mode is ALL_TASKS, the resulting link will ask the user to complete all specified tasks for all specified locations, regardless of whether they have been completed before, are pending, or are in progress. 
  # @param [Hash] opts the optional parameters
  # @return [OptimizationTaskLinksResponse]
  describe 'get_link_optimization_task test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_optimization_tasks
  # Optimization Tasks: List
  # List Optimization Tasks for the account, optionally filtered by task and location.
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param task_ids Comma-separated list of Optimization Task IDs corresponding to Optimization Tasks that should be included in the response.  Defaults to all available Optimization Tasks in the account. 
  # @param location_ids Comma-separated list of Location IDs, corresponding to Locations to be evaluated when returning the number of locations eligible &amp; completed for each Optimization Task.  Defaults to all Locations in the account. 
  # @param [Hash] opts the optional parameters
  # @return [OptimizationTasksResponse]
  describe 'get_optimization_tasks test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_roles
  # Roles: Get
  # Retrieves a list of the roles that users can have within a customerâ€™s account.
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param [Hash] opts the optional parameters
  # @return [RolesResponse]
  describe 'get_roles test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user
  # Users: Get
  # Retrieves details of a specific User.
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [UserResponse]
  describe 'get_user test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_users
  # Users: List
  # Lists all Users in an account.
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Number of results to return
  # @option opts [Integer] :offset Number of results to skip. Used to page through results
  # @return [UsersResponse]
  describe 'get_users test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_user
  # Users: Update
  # Updates an existing User.
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format
  # @param user_id 
  # @param user_request 
  # @param [Hash] opts the optional parameters
  # @return [UserResponse]
  describe 'update_user test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
