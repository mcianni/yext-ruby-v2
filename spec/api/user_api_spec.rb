=begin
#Yext API

# 

OpenAPI spec version: 2.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for YextClient::UserApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'UserApi' do
  before do
    # run before each test
    @instance = YextClient::UserApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UserApi' do
    it 'should create an instact of UserApi' do
      expect(@instance).to be_instance_of(YextClient::UserApi)
    end
  end

  # unit tests for create_user
  # Users: Create
  # Create a new User
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format.
  # @param create_user_request 
  # @param [Hash] opts the optional parameters
  # @return [IdResponse]
  describe 'create_user test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_user
  # Users: Delete
  # Deletes an existing User.
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [ErrorResponse]
  describe 'delete_user test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_roles
  # Roles: Get
  # Retrieves a list of the roles that users can have within a customerâ€™s account.
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format.
  # @param [Hash] opts the optional parameters
  # @return [RolesResponse]
  describe 'get_roles test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user
  # Users: Get
  # Retrieves details of a specific User.
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [UserResponse]
  describe 'get_user test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_users
  # Users: List
  # Lists all Users in an account.
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Number of results to return.
  # @option opts [Integer] :offset Number of results to return.
  # @return [UsersResponse]
  describe 'get_users test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_user
  # Users: Update
  # Updates an existing User.
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format.
  # @param user_id 
  # @param update_user_request 
  # @param [Hash] opts the optional parameters
  # @return [IdResponse]
  describe 'update_user test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_user_password
  # Users: Update Password
  # Updates a User&#39;s password.
  # @param account_id 
  # @param v A date in &#x60;YYYYMMDD&#x60; format.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [UpdatePasswordRequest] :update_password_request 
  # @return [ErrorResponse]
  describe 'update_user_password test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
